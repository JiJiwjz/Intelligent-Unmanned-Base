<?xml version="1.0"?>
<!--1-2.1:1.0  1-2.3:1.0-->
<!--1-2.2:1.0  1-2.4:1.0-->
<launch>
    <arg name="depth_camera_type"   default="$(env DEPTH_CAMERA_TYPE)"/>
    <arg name="astra_camera_name"   default="astra_camera" />
    <arg name="gemini_camera_name"  default="gemini_camera" />
    <arg name="image_topic"         default="image_raw" />
    <arg name="tf_prefix"           default="" />
    <arg name="app"                 default="false"/>

    <param name="astra_camera/camera_name"  value="$(arg astra_camera_name)"/>
    <param name="astra_camera/image_topic"  value="$(arg image_topic)"/>

    <param name="gemini_camera/camera_name"  value="$(arg gemini_camera_name)"/>
    <param name="gemini_camera/image_topic"  value="$(arg image_topic)"/>

    <include if="$(eval depth_camera_type != 'AstraProPlus')" file="$(find peripherals)/launch/include/gemini.launch">
        <arg name="camera_name" value="$(arg gemini_camera_name)" />
        <arg name="tf_prefix"   value="$(arg tf_prefix)"/>
        <arg name="publish_tf"  value="false" />
        <arg name="usb_port"    value="1-2.1.4.2"/>
        <arg name="device_num"  value="2"/>
    </include>

    <include file="$(find peripherals)/launch/include/astra.launch">
        <arg name="camera_name" value="$(arg astra_camera_name)" />
        <arg name="tf_prefix"   value="$(arg tf_prefix)"/>
        <arg name="publish_tf"  value="false" />
        <arg name="usb_port"    value="1-2.2.1"/>
        <arg if="$(eval depth_camera_type == 'AstraProPlus')" name="device_num"  value="1"/>
        <arg if="$(eval depth_camera_type != 'AstraProPlus')" name="device_num"  value="2"/>
    </include>

    <node if="$(arg app)" name="image_republish" pkg="image_transport" type="republish" args="raw compressed">
        <remap from="in" to="/$(arg astra_camera_name)/rgb/image_raw"/>
        <remap from="out" to="/$(arg astra_camera_name)/rgb/image_raw"/>
        <remap from="/$(arg astra_camera_name)/rgb/image_raw/compressed" to="/compressed_image"/>
    </node>

    <arg name="pi/2" value="1.5707963267948966" />
    <arg name="optical_rotate" value="0 0 0 -$(arg pi/2) 0 -$(arg pi/2)" />

    <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg gemini_camera_name)_base_link"
        args="0 0.02 0 0 0 0 $(arg tf_prefix)$(arg gemini_camera_name)_link $(arg tf_prefix)$(arg gemini_camera_name)_depth_frame" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg gemini_camera_name)_base_link1"
        args="0 0.01 0 0 0 0 $(arg tf_prefix)$(arg gemini_camera_name)_link $(arg tf_prefix)$(arg gemini_camera_name)_color_frame" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg gemini_camera_name)_base_link2"
        args="$(arg optical_rotate) $(arg tf_prefix)$(arg gemini_camera_name)_depth_frame $(arg tf_prefix)$(arg gemini_camera_name)_depth_optical_frame" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg gemini_camera_name)_base_link3"
        args="$(arg optical_rotate) $(arg tf_prefix)$(arg gemini_camera_name)_color_frame $(arg tf_prefix)$(arg gemini_camera_name)_color_optical_frame" />

    <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg astra_camera_name)_base_link"
        args="0 0.0375 0 0 0 0 $(arg tf_prefix)$(arg astra_camera_name)_link $(arg tf_prefix)$(arg astra_camera_name)_depth_frame" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg astra_camera_name)_base_link1"
        args="0 0.0125 0 0 0 0 $(arg tf_prefix)$(arg astra_camera_name)_link $(arg tf_prefix)$(arg astra_camera_name)_color_frame" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg astra_camera_name)_base_link2"
        args="$(arg optical_rotate) $(arg tf_prefix)$(arg astra_camera_name)_depth_frame $(arg tf_prefix)$(arg astra_camera_name)_depth_optical_frame" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="$(arg astra_camera_name)_base_link3"
        args="$(arg optical_rotate) $(arg tf_prefix)$(arg astra_camera_name)_color_frame $(arg tf_prefix)$(arg astra_camera_name)_color_optical_frame" />

</launch>
